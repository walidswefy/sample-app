version: '2'
services:
  helloapp-app:
    image: helloapp
    ports:
      - '8081:8012'
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev,swagger
#      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
#      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
#      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
      - SPRING_DATA_MONGODB_URI=mongodb://helloapp-mongodb:27017/test
#      - SPRING_DATA_MONGODB_DATABASE=test
#      - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
  helloapp-mongodb:
    extends:
      file: mongodb.yml
      service: helloapp-mongodb

  sampleapplication-prometheus:
    image: prom/prometheus:v2.18.1
    volumes:
      - ./prometheus/:/etc/prometheus/
    command: '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    # On MacOS, remove next line and replace localhost by host.docker.internal in prometheus/prometheus.yml and
    # grafana/provisioning/datasources/datasource.yml
#    network_mode: 'host' # to test locally running service
  sampleapplication-grafana:
    image: grafana/grafana:7.0.1
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - 3000:3000
